{"mappings":";AAEA,OAAO,MAAM,cAAe,eAAe,YAAY,MAAM,QAAgD,CAAC;AAC9G,OAAO,MAAM,cAAe,eAAe,YAAY,MAAM,QAA0D,CAAC;AACxH,OAAO,MAAM,cAAe,eAAe,KAAK,KAAK,QAAqC,CAAC;AAC3F,OAAO,MAAM,cAAe,eAAe,YAAY,MAAM,QAA0D,CAAC;AACxH,OAAO,MAAM,cAAe,eAAe,YAAY,MAAM,QAA0D,CAAC;AACxH,OAAO,MAAM,cAAe,eAAe,SAAS,GAAG,QAAqC,CAAC;AAC7F,OAAO,MAAM,2BAA4B,MAAM;;;;;CAA+D,CAAC;AAC/G,OAAO,MAAM,QAAQ;IAAC,QAAQ,EAAE,IAAI,CAAA;CAAoB,CAAC","sources":["index.ts"],"sourcesContent":["import {NextApiResponse} from \"next\";\n\nexport const res403 = (res: NextApiResponse, message?: string) => res.status(403).send(message || \"Unauthed\");\nexport const res400 = (res: NextApiResponse, message?: string) => res.status(400).send(message || \"Missing parameters\");\nexport const res500 = (res: NextApiResponse, e: Error) => res.status(500).json({error: e});\nexport const res405 = (res: NextApiResponse, message?: string) => res.status(405).send(message || \"Method not allowed\");\nexport const res404 = (res: NextApiResponse, message?: string) => res.status(404).send(message || \"Resource not found\");\nexport const res200 = (res: NextApiResponse, data?: any) => res.status(200).json(data || {});\nexport const ssrRedirect = (destination: string) => ({redirect: {permanent: false, destination: destination}});\nexport const ssr404: {notFound: true} = {notFound: true};"],"names":[],"version":3,"file":"index.d.ts.map"}